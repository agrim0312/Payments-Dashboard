generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String?  @unique
  name        String? 
  number      String  @unique
  password    String
  onRamping   onRamping[]
  Balance     Balance[]
  sentTransfers P2PTransfers[]    @relation(name: "FromUserRelation")
  recievedTransfers P2PTransfers[] @relation(name: "ToUserRelation")
}

model Merchant {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  auth_type   AuthType   
}

model onRamping {
  id        Int   @id @default(autoincrement())
  status    onRampingStatus
  token     String @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model P2PTransfers {
  id              Int       @id @default(autoincrement())
  timestamp       DateTime?
  sentUserId      Int
  recievedUserId  Int
  sentUser        User      @relation(name:"FromUserRelation",fields: [sentUserId],references: [id])
  recievedUser    User      @relation(name:"ToUserRelation",fields: [recievedUserId],references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  timestamp DateTime?
  user   User @relation(fields: [userId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum onRampingStatus {
  Processing
  Failed
  Successful
}